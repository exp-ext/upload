version: "3.8"

services:

  minio:
    restart: always
    image: minio/minio:latest
    container_name: main_minio
    command: server --console-address ":9001" /data
    ports:
      - '9000:9000'
      - '9090:9001'
    volumes:
      - upload_minio_volume:/data
    env_file:
      - ./.env

  postgres_db:
    restart: always
    container_name: upload_postgres_db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - upload_postgresql_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    restart: always
    container_name: upload_redis
    image: redis:latest
    command: >
          --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    restart: always
    container_name: upload_backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    entrypoint: [ "sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 backend.wsgi:application" ]
    depends_on:
      - postgres_db
      - redis
    env_file:
      - ./.env
    ports:
      - "8000:8000"

  celery_worker:
    restart: always
    container_name: upload_celery_worker
    build:
      context: ../backend
      dockerfile: Dockerfile
    entrypoint: [ "sh", "-c", "celery -A backend worker --loglevel=info --concurrency 1 -E" ]
    depends_on:
      - backend
    env_file:
      - ./.env

  nginx:
    image: nginx:latest
    container_name: main_nginx
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./certbot/www/:/var/lib/letsencrypt/:rw
    depends_on:
      - minio
      - backend
    ports:
      - '80:80'
      - '443:443'

  certbot:
    image: certbot/certbot
    container_name: main_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./certbot/www/:/var/lib/letsencrypt/:rw
    entrypoint: '/bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 48h & wait $${!}; done;"'
    depends_on:
      - nginx

volumes:
  upload_postgresql_volume:
  upload_minio_volume:
